// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  password    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  profile     Profile?
  comments    Comment[]
  posts       Post[]
}

model Profile {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  age         Int
  pictureURL  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      Int       @unique
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Comment {
  id          Int       @id @default(autoincrement())
  content     String    
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      Int
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  originId    Int?
  origin      Comment?  @relation("OriginReplies", fields: [originId], references: [id]) 
  replies     Comment[] @relation("OriginReplies")
  postId      Int
  post        Post      @relation(fields: [postId], references: [id])
}

model Post {
  id            Int         @id @default(autoincrement())
  title         String      @unique    
  content       String    
  imageUrl      String
  publishedAt   DateTime?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  userId        Int
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  comments      Comment[]
  categories    Category[]
}

model Category {
  id            Int         @id @default(autoincrement())
  name          String      @unique
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  posts         Post[]
}